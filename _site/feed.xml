<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-11-21T17:43:10-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Nick Shu. A Fool in the Making</title><subtitle>Nick's Personal Website
</subtitle><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><entry><title type="html">Slurm Commands</title><link href="http://localhost:4000/slurm_commands.html" rel="alternate" type="text/html" title="Slurm Commands" /><published>2020-11-21T00:00:00-05:00</published><updated>2020-11-21T00:00:00-05:00</updated><id>http://localhost:4000/slurm-commands</id><content type="html" xml:base="http://localhost:4000/slurm_commands.html">&lt;p&gt;Here is a quick reminders on &lt;a href=&quot;https://slurm.schedmd.com/&quot;&gt;Slurm&lt;/a&gt; and how to use it&lt;/p&gt;

&lt;h2 id=&quot;one-line-commands&quot;&gt;One Line Commands&lt;/h2&gt;

&lt;h3 id=&quot;view-the-running-jobs&quot;&gt;View the Running Jobs&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ squeue
   JOBID  PARTITION             NAME     USER   ST       TIME     NODES    NODELIST(REASON)
   26529      batch       train_BERT      joe    R    1:24:52         1              cnode1
   26530      batch     train_ResNet    maria    R    2:12:56         1              cnode2
   26531      batch      update_plex    maria    R    2:14:20         1              cnode3
   26532      batch    download_data    janet    R    2:16:17         1              cnode7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;view-nodes-and-partitions&quot;&gt;View Nodes and Partitions&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sinfo
PARTITION    AVAIL  TIMELIMIT  NODES  STATE NODELIST
batch*          up 8-00:00:00      9    mix cnode[1-9]
batch*          up 8-00:00:00      3   idle cnode[10-12]
gpu             up 8-00:00:00      9    mix cnode[1-9]
gpu             up 8-00:00:00      3   idle cnode[10-12]
rtx             up 8-00:00:00      4   idle rnode[1-4]
reservations    up   infinite      1  down* nvidia-dgx1
reservations    up   infinite     10    mix beauty,cnode[1-9]
reservations    up   infinite      7   idle cnode[10-12],rnode[1-4]
overflow        up   infinite      1  down* nvidia-dgx1
overflow        up   infinite     10    mix beauty,cnode[1-9]
overflow        up   infinite      7   idle cnode[10-12],rnode[1-4]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;submitting-a-job&quot;&gt;Submitting a Job&lt;/h2&gt;

&lt;p&gt;You can submit either a job or open an interactive bash, and then run your job through there&lt;/p&gt;

&lt;h3 id=&quot;running-a-job-with-sbatch&quot;&gt;Running a Job with sbatch&lt;/h3&gt;

&lt;p&gt;First create a shell script that will be used&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# run.sh&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --job-name  {job_name}         # E.g. train_model&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --nodelist  {node_name}        # E.g. cnode1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --partition {partition_name}   # E.g. gpu&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --gpus      {number_of_gpus}   # E.g. 1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --time      {max_time}         # E.g. 08-00&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --ntasks    {number_of_cpus}   # E.g. 16&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --mem       {ram_memory}       # E.g. 32G&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Enable using a python &lt;/span&gt;
scl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;rh-python36 bash
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /home/user/envs/myenv/bin/activate

&lt;span class=&quot;c&quot;&gt;# Copy data into your /tmp folder (Read below)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /home/user/data/my_dataset /tmp/user/my_dataset

&lt;span class=&quot;c&quot;&gt;# Copy your script&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;my_experiment.py /tmp/user

&lt;span class=&quot;c&quot;&gt;# Change into that directory&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp/user

&lt;span class=&quot;c&quot;&gt;# Run your script&lt;/span&gt;
python my_experiment.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sometimes, job is deployed at a different node than that of where you originally are. For example, if you are on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cnode0&lt;/code&gt;, sometimes the job gets deployed at another node (e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cnode1&lt;/code&gt;). This can be seen in your terminal, which should say &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user@cnode0&lt;/code&gt;. With that, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tmp&lt;/code&gt; directory in different nodes are not the same. In other words, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cnode0&lt;/code&gt;’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tmp&lt;/code&gt; directory is not the same as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cnode1&lt;/code&gt;’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tmp&lt;/code&gt;. Therefore, if you are dealing with a dataset, it is not wise to have the server to get data from another computer every time. So, it’s helpful to copy that dataset into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/tmp&lt;/code&gt; directory&lt;/p&gt;

&lt;p&gt;Finally, you can run the job with&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sbatch run.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Below is the same script as the one above, but using the shortened flags&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# run.sh&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -J       {job_name}         # E.g. train_model&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -w       {node_name}        # E.g. cnode1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -p       {partition_name}   # E.g. gpu&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -G       {number_of_gpus}   # E.g. 1&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -t       {max_time}         # E.g. 08-00&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -n       {number_of_cpus}   # E.g. 16&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --mem    {ram_memory}       # E.g. 32G&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Enable using a python &lt;/span&gt;
scl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;rh-python36 bash
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /home/user/envs/myenv/bin/activate

&lt;span class=&quot;c&quot;&gt;# Copy data into your /tmp folder (Read below)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /home/user/data/my_dataset /tmp/user/my_dataset

&lt;span class=&quot;c&quot;&gt;# Copy your script&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;my_experiment.py /tmp/user

&lt;span class=&quot;c&quot;&gt;# Change into that directory&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp/user

&lt;span class=&quot;c&quot;&gt;# Run your script&lt;/span&gt;
python my_experiment.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;run-a-job-with-srun&quot;&gt;Run a Job with srun&lt;/h3&gt;

&lt;p&gt;This is the way you can run a job interactively. Basically, a lot of the above is done again, but just interactively.&lt;/p&gt;

&lt;p&gt;First you need to get into the interactive bash. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--pty&lt;/code&gt; flag in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;srun&lt;/code&gt; allows you to execute a task in a pseudo terminal mode&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@cnode0:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;srun &lt;span class=&quot;nt&quot;&gt;-J&lt;/span&gt; jobname &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; gpu &lt;span class=&quot;nt&quot;&gt;-G&lt;/span&gt; 1 &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; cnode7 &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 10 &lt;span class=&quot;nt&quot;&gt;--mem&lt;/span&gt; 16G &lt;span class=&quot;nt&quot;&gt;--pty&lt;/span&gt; bash
&lt;span class=&quot;c&quot;&gt;# or srun -J jobname -p batch -G 1 -w cnode7 -n 10 --mem 16G --pty bash&lt;/span&gt;
user@cnode7:~&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you can run your jobs as you normally would. E.g.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@cnode7:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /home/user/data/my_dataset /tmp/user
user@cnode7:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /home/user/envs/myenv/bin/activate
user@cnode7:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp &lt;/span&gt;my_experiment.py /tmp/user
user@cnode7:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp/user
user@cnode7:~&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python my_experiment.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;additional-resources&quot;&gt;Additional Resources&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://slurm.schedmd.com/quickstart.html&quot;&gt;Slurm’s Quick Start User Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example written by Jim Kinney and Robert Tweedy is&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# This is an example SBATCH script &quot;slurm_example_script.sh&quot;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# For all available options, see the 'sbatch' manpage.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Note that all SBATCH commands must start with a #SBATCH directive;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# to comment out one of these you must add another # at the beginning of the line.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# All #SBATCH directives must be declared before any other commands appear in the script.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Once you understand how to use this file, you can remove these comments to make it&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# easier to read/edit/work with/etc. :-)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (Recommended)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### Name the project in the batch job queue&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -J ExampleName&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (Optional)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### If you'd like to give a bit more information about your job, you can&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### use the command below.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --comment='A comment/brief descriptive name of your job goes here.'&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (REQUIRED)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### Select the queue (also called &quot;partition&quot;) to use. The available partitions for your&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### use are visible using the 'sinfo' command.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### You must specify 'gpu' or another partition to have access to the system GPUs.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -p batch&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (REQUIRED for GPU, otherwise do not specify)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### If you select a GPU queue, you must also use the command below to select the number of GPUs&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### to use. Note that you're limited to 1 GPU per job as a maximum on the basic GPU queue.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### If you need to use more than 1, contact bmi-it@emory.edu to schedule a multi-gpu test for&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### access to the multi-gpu queue.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### If you need a specific type of GPU, you can prefix the number with the GPU's type like&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### so: &quot;SBATCH -G turing:1&quot;. The available types of GPUs as of 04/16/2020 are:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### turing (12 total)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### titan (only 1; requesting this GPU may result in a delay in your job starting)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### pascal (4 total; using this GPU requires that your code handle being pre-empted/stopped at any&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###        time, as there are certain users with priority access to these GPUs).&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### volta (8 total) - You must use the 'dgx-only' partition to select these GPUs.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### rtx (4 total) - NVidia Quadro RTX 6000. You must use the 'rtx' or 'overflow' partitions to select these GPUs.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##SBATCH -G 1&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (REQUIRED) if you don't want your job to end after 8 hours!&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### If you know your job needs to run for a long time or will finish up relatively&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### quickly then set the command below to specify how long your job should take to run.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### This may allow it to start running sooner if the cluster is under heavy load.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### Your job will be held to the value you specify, which means that it will be ended&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### if it should go over the limit. If you're unsure of how long your job will take to run, it's&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### better to err on the longer side as jobs can always finish earlier, but they can't extend their&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### requested time limit to run longer.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### The format can be &quot;minutes&quot;, &quot;hours:minutes:seconds&quot;, &quot;days-hours&quot;, or &quot;days-hours:minutes:seconds&quot;.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### By default, jobs will run for 8 hours if this isn't specified.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -t 8:0:0&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;### (optional) Output and error file definitions. To have all output in a file named&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### &quot;slurm-&amp;lt;jobID&amp;gt;.out&quot; just remove the two SBATCH commands below. Specifying the -e parameter&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### will split the stdout and stderr output into different files.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### The %A is replaced with the job's ID.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -o file-%A.out&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -e file-%A.err&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### You can specify the number of nodes, number of cpus/threads, and amount of memory per node&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### you need for your job. We recommend specifying only memory unless you know you need a&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### specific number of nodes/threads, as you will be automatically allocated a reasonable&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### amount of threads based on the memory amount requested.&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (REQUIRED)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### Request 4 GB of RAM - You should always specify some value for this option, otherwise&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                       your job's available memory will be limited to a default value&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                       which may not be high enough for your code to run successfully.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                       This value is for the amount of RAM per computational node.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --mem 4G&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (optional)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### Request 4 cpus/threads - Specify a value for this function if you know your code uses&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                          multiple CPU threads when running and need to override the&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                          automatic allocation of threads based on your memory request&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                          above. Note that this value is for the TOTAL number of threads&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                          available to the job, NOT threads per computational node! Also note&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                          that Matlab is limited to using up to 15 threads per node due to&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                          licensing restrictions imposed by the Matlab software.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##SBATCH -n 4&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (optional)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### Request 2 cpus/threads per task - This differs from the &quot;-n&quot; parameter above in that it&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                                   specifies how many threads should be allocated per job&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                                   task. By default, this is 1 thread per task. Set this&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                                   parameter if you need to dedicate multiple threads to a&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                                   single program/application rather than running multiple&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                                   separate applications which require a single thread each.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;##SBATCH -c 2&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (very optional; leave as '1' unless you know what you're doing)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### Request 1 node - Only specify a value other than 1 for this option when you know that&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                  your code will run across multiple systems concurrently. Otherwise&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###                  you're just wasting resources that could be used by others.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH -N 1&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### (optional)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### This is to send you emails of job status&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### See the manpage for sbatch for all the available options.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --mail-user=nicolas.s.shu@gmail.com&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#SBATCH --mail-type=ALL&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;### Your actual commands to start your code go below this area. If you need to run anything in&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### the SCL python environments that's more complex than a simple Python script (as in, if you&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### have to do some other setup in the shell environment first for your code), then you should&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### write a wrapper script that does all the necessary steps and then run it like in the below&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### example:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### scl enable rh-python36 '/home/mynetid/my_wrapper_script.sh'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;###&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;### Otherwise, you're probably not running everything you think you are in the SCL environment.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;hostname
echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello world!'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; test.txt
scl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;rh-python36 &lt;span class=&quot;s1&quot;&gt;'python shit.py'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; shit.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><category term="Instructions" /><category term="Server" /><summary type="html">Here is a quick reminders on Slurm and how to use it One Line Commands View the Running Jobs $ squeue JOBID PARTITION NAME USER ST TIME NODES NODELIST(REASON) 26529 batch train_BERT joe R 1:24:52 1 cnode1 26530 batch train_ResNet maria R 2:12:56 1 cnode2 26531 batch update_plex maria R 2:14:20 1 cnode3 26532 batch download_data janet R 2:16:17 1 cnode7 View Nodes and Partitions $ sinfo PARTITION AVAIL TIMELIMIT NODES STATE NODELIST batch* up 8-00:00:00 9 mix cnode[1-9] batch* up 8-00:00:00 3 idle cnode[10-12] gpu up 8-00:00:00 9 mix cnode[1-9] gpu up 8-00:00:00 3 idle cnode[10-12] rtx up 8-00:00:00 4 idle rnode[1-4] reservations up infinite 1 down* nvidia-dgx1 reservations up infinite 10 mix beauty,cnode[1-9] reservations up infinite 7 idle cnode[10-12],rnode[1-4] overflow up infinite 1 down* nvidia-dgx1 overflow up infinite 10 mix beauty,cnode[1-9] overflow up infinite 7 idle cnode[10-12],rnode[1-4] Submitting a Job You can submit either a job or open an interactive bash, and then run your job through there Running a Job with sbatch First create a shell script that will be used # run.sh #!/bin/bash #SBATCH --job-name {job_name} # E.g. train_model #SBATCH --nodelist {node_name} # E.g. cnode1 #SBATCH --partition {partition_name} # E.g. gpu #SBATCH --gpus {number_of_gpus} # E.g. 1 #SBATCH --time {max_time} # E.g. 08-00 #SBATCH --ntasks {number_of_cpus} # E.g. 16 #SBATCH --mem {ram_memory} # E.g. 32G # Enable using a python scl enable rh-python36 bash source /home/user/envs/myenv/bin/activate # Copy data into your /tmp folder (Read below) cp /home/user/data/my_dataset /tmp/user/my_dataset # Copy your script cp my_experiment.py /tmp/user # Change into that directory cd /tmp/user # Run your script python my_experiment.py Sometimes, job is deployed at a different node than that of where you originally are. For example, if you are on cnode0, sometimes the job gets deployed at another node (e.g. cnode1). This can be seen in your terminal, which should say user@cnode0. With that, the /tmp directory in different nodes are not the same. In other words, cnode0’s /tmp directory is not the same as cnode1’s /tmp. Therefore, if you are dealing with a dataset, it is not wise to have the server to get data from another computer every time. So, it’s helpful to copy that dataset into the /tmp directory Finally, you can run the job with sbatch run.sh Below is the same script as the one above, but using the shortened flags # run.sh #!/bin/bash #SBATCH -J {job_name} # E.g. train_model #SBATCH -w {node_name} # E.g. cnode1 #SBATCH -p {partition_name} # E.g. gpu #SBATCH -G {number_of_gpus} # E.g. 1 #SBATCH -t {max_time} # E.g. 08-00 #SBATCH -n {number_of_cpus} # E.g. 16 #SBATCH --mem {ram_memory} # E.g. 32G # Enable using a python scl enable rh-python36 bash source /home/user/envs/myenv/bin/activate # Copy data into your /tmp folder (Read below) cp /home/user/data/my_dataset /tmp/user/my_dataset # Copy your script cp my_experiment.py /tmp/user # Change into that directory cd /tmp/user # Run your script python my_experiment.py Run a Job with srun This is the way you can run a job interactively. Basically, a lot of the above is done again, but just interactively. First you need to get into the interactive bash. The --pty flag in srun allows you to execute a task in a pseudo terminal mode user@cnode0:~$ srun -J jobname -p gpu -G 1 -w cnode7 -n 10 --mem 16G --pty bash # or srun -J jobname -p batch -G 1 -w cnode7 -n 10 --mem 16G --pty bash user@cnode7:~$ Then you can run your jobs as you normally would. E.g. user@cnode7:~$ cp /home/user/data/my_dataset /tmp/user user@cnode7:~$ source /home/user/envs/myenv/bin/activate user@cnode7:~$ cp my_experiment.py /tmp/user user@cnode7:~$ cd /tmp/user user@cnode7:~$ python my_experiment.py Additional Resources Slurm’s Quick Start User Guide An example written by Jim Kinney and Robert Tweedy is #!/bin/bash # This is an example SBATCH script &quot;slurm_example_script.sh&quot; # For all available options, see the 'sbatch' manpage. # # Note that all SBATCH commands must start with a #SBATCH directive; # to comment out one of these you must add another # at the beginning of the line. # All #SBATCH directives must be declared before any other commands appear in the script. # # Once you understand how to use this file, you can remove these comments to make it # easier to read/edit/work with/etc. :-) ### (Recommended) ### Name the project in the batch job queue #SBATCH -J ExampleName ### (Optional) ### If you'd like to give a bit more information about your job, you can ### use the command below. #SBATCH --comment='A comment/brief descriptive name of your job goes here.' ### (REQUIRED) ### Select the queue (also called &quot;partition&quot;) to use. The available partitions for your ### use are visible using the 'sinfo' command. ### You must specify 'gpu' or another partition to have access to the system GPUs. #SBATCH -p batch ### (REQUIRED for GPU, otherwise do not specify) ### If you select a GPU queue, you must also use the command below to select the number of GPUs ### to use. Note that you're limited to 1 GPU per job as a maximum on the basic GPU queue. ### If you need to use more than 1, contact bmi-it@emory.edu to schedule a multi-gpu test for ### access to the multi-gpu queue. ### ### If you need a specific type of GPU, you can prefix the number with the GPU's type like ### so: &quot;SBATCH -G turing:1&quot;. The available types of GPUs as of 04/16/2020 are: ### turing (12 total) ### titan (only 1; requesting this GPU may result in a delay in your job starting) ### pascal (4 total; using this GPU requires that your code handle being pre-empted/stopped at any ### time, as there are certain users with priority access to these GPUs). ### volta (8 total) - You must use the 'dgx-only' partition to select these GPUs. ### rtx (4 total) - NVidia Quadro RTX 6000. You must use the 'rtx' or 'overflow' partitions to select these GPUs. ##SBATCH -G 1 ### (REQUIRED) if you don't want your job to end after 8 hours! ### If you know your job needs to run for a long time or will finish up relatively ### quickly then set the command below to specify how long your job should take to run. ### This may allow it to start running sooner if the cluster is under heavy load. ### Your job will be held to the value you specify, which means that it will be ended ### if it should go over the limit. If you're unsure of how long your job will take to run, it's ### better to err on the longer side as jobs can always finish earlier, but they can't extend their ### requested time limit to run longer. ### ### The format can be &quot;minutes&quot;, &quot;hours:minutes:seconds&quot;, &quot;days-hours&quot;, or &quot;days-hours:minutes:seconds&quot;. ### By default, jobs will run for 8 hours if this isn't specified. #SBATCH -t 8:0:0 ### (optional) Output and error file definitions. To have all output in a file named ### &quot;slurm-&amp;lt;jobID&amp;gt;.out&quot; just remove the two SBATCH commands below. Specifying the -e parameter ### will split the stdout and stderr output into different files. ### The %A is replaced with the job's ID. #SBATCH -o file-%A.out #SBATCH -e file-%A.err ### You can specify the number of nodes, number of cpus/threads, and amount of memory per node ### you need for your job. We recommend specifying only memory unless you know you need a ### specific number of nodes/threads, as you will be automatically allocated a reasonable ### amount of threads based on the memory amount requested. ### (REQUIRED) ### Request 4 GB of RAM - You should always specify some value for this option, otherwise ### your job's available memory will be limited to a default value ### which may not be high enough for your code to run successfully. ### This value is for the amount of RAM per computational node. #SBATCH --mem 4G ### (optional) ### Request 4 cpus/threads - Specify a value for this function if you know your code uses ### multiple CPU threads when running and need to override the ### automatic allocation of threads based on your memory request ### above. Note that this value is for the TOTAL number of threads ### available to the job, NOT threads per computational node! Also note ### that Matlab is limited to using up to 15 threads per node due to ### licensing restrictions imposed by the Matlab software. ##SBATCH -n 4 ### (optional) ### Request 2 cpus/threads per task - This differs from the &quot;-n&quot; parameter above in that it ### specifies how many threads should be allocated per job ### task. By default, this is 1 thread per task. Set this ### parameter if you need to dedicate multiple threads to a ### single program/application rather than running multiple ### separate applications which require a single thread each. ##SBATCH -c 2 ### (very optional; leave as '1' unless you know what you're doing) ### Request 1 node - Only specify a value other than 1 for this option when you know that ### your code will run across multiple systems concurrently. Otherwise ### you're just wasting resources that could be used by others. #SBATCH -N 1 ### (optional) ### This is to send you emails of job status ### See the manpage for sbatch for all the available options. #SBATCH --mail-user=nicolas.s.shu@gmail.com #SBATCH --mail-type=ALL ### Your actual commands to start your code go below this area. If you need to run anything in ### the SCL python environments that's more complex than a simple Python script (as in, if you ### have to do some other setup in the shell environment first for your code), then you should ### write a wrapper script that does all the necessary steps and then run it like in the below ### example: ### ### scl enable rh-python36 '/home/mynetid/my_wrapper_script.sh' ### ### Otherwise, you're probably not running everything you think you are in the SCL environment. hostname echo 'Hello world!' &amp;gt; test.txt scl enable rh-python36 'python shit.py' &amp;gt; shit.txt</summary></entry><entry><title type="html">Port Forwarding with Netgear Routers</title><link href="http://localhost:4000/port_forwarding_netgear.html" rel="alternate" type="text/html" title="Port Forwarding with Netgear Routers" /><published>2020-10-30T00:00:00-04:00</published><updated>2020-10-30T00:00:00-04:00</updated><id>http://localhost:4000/router-port-forwarding</id><content type="html" xml:base="http://localhost:4000/port_forwarding_netgear.html">&lt;p&gt;In order to forward a port in Netgear, first access your router. If you’re connected to the router already, you can either reach it via http://www.routerlogin.net or via http://192.168.1.1&lt;/p&gt;

&lt;p&gt;You’ll be on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BASIC&lt;/code&gt; tab. Click on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ADVANCED&lt;/code&gt;. Now go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced Setup &amp;gt; Port Forwarding / Port Triggering&lt;/code&gt;. Here’s where you’ll be allowing ports in computers to be accessed for remote purposes.&lt;/p&gt;

&lt;p&gt;So click on the button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+ Add Custom Service&lt;/code&gt;. There, enter the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Service Name&lt;/strong&gt;: Choose any name&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Service Type&lt;/strong&gt;: TCP/UDP&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;External Port Range&lt;/strong&gt;: Choose the port that you wish to forward (e.g. 8080)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Internal Port Range&lt;/strong&gt;: Use the same as the “External Port Range”&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Internal IP Address&lt;/strong&gt;: Enter or choose the machine that you wish its port to be exposed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Finally, click on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Apply&lt;/code&gt; button, and you should have access.&lt;/p&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><category term="Server" /><category term="Networking" /><summary type="html">In order to forward a port in Netgear, first access your router. If you’re connected to the router already, you can either reach it via http://www.routerlogin.net or via http://192.168.1.1 You’ll be on the BASIC tab. Click on the ADVANCED. Now go to Advanced Setup &amp;gt; Port Forwarding / Port Triggering. Here’s where you’ll be allowing ports in computers to be accessed for remote purposes. So click on the button + Add Custom Service. There, enter the following: Service Name: Choose any name Service Type: TCP/UDP External Port Range: Choose the port that you wish to forward (e.g. 8080) Internal Port Range: Use the same as the “External Port Range” Internal IP Address: Enter or choose the machine that you wish its port to be exposed. Finally, click on the Apply button, and you should have access.</summary></entry><entry><title type="html">Synology NAS Ports</title><link href="http://localhost:4000/synology_nas_ports.html" rel="alternate" type="text/html" title="Synology NAS Ports" /><published>2020-10-30T00:00:00-04:00</published><updated>2020-10-30T00:00:00-04:00</updated><id>http://localhost:4000/synology-nas-ports</id><content type="html" xml:base="http://localhost:4000/synology_nas_ports.html">&lt;p&gt;This is a list of ports for the Synology NAS&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Port Number&lt;/th&gt;
      &lt;th&gt;Software / Application&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2202/ubooquity&lt;/td&gt;
      &lt;td&gt;Ubooquity User&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2203&lt;/td&gt;
      &lt;td&gt;Ubooquity Admin&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5000&lt;/td&gt;
      &lt;td&gt;Synology&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;32400&lt;/td&gt;
      &lt;td&gt;Plex&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8096&lt;/td&gt;
      &lt;td&gt;Jellyfin&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8181&lt;/td&gt;
      &lt;td&gt;Tautulli&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><category term="Server" /><summary type="html">This is a list of ports for the Synology NAS Port Number Software / Application 2202/ubooquity Ubooquity User 2203 Ubooquity Admin 5000 Synology 32400 Plex 8096 Jellyfin 8181 Tautulli</summary></entry><entry><title type="html">Installing Ubooquity on Synology NAS via Docker</title><link href="http://localhost:4000/ubooquity_synology.html" rel="alternate" type="text/html" title="Installing Ubooquity on Synology NAS via Docker" /><published>2020-10-30T00:00:00-04:00</published><updated>2020-10-30T00:00:00-04:00</updated><id>http://localhost:4000/ubooquity-synology</id><content type="html" xml:base="http://localhost:4000/ubooquity_synology.html">&lt;p&gt;This is a guide to install &lt;a href=&quot;&quot;&gt;Ubooquity&lt;/a&gt; on a Synology NAS. There hasn’t been many good instructions to install it, and for fools like me, it’s good to sometimes go step by step. Note that this method is to install it using Docker.&lt;/p&gt;

&lt;p&gt;First off, SSH into your server. Ideally, your server will be something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.XX&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh &amp;lt;username&amp;gt;@&amp;lt;server-ip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, figure out your PGID and PUID by running the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;username&amp;gt;@&amp;lt;server-ip&amp;gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;uid&amp;gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;lt;username&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;gid&amp;gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&amp;lt;username&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, assuming you’ve already installed Docker from the Package Manager, go to the Docker directory, and create a directory called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ubooquity&lt;/code&gt;. Here is where all of the config files will be located. Next, open up Docker, and in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registry&lt;/code&gt; tab, look up &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;linuxserver/ubooquity&lt;/code&gt;. Once you find it, install it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/ubooquity_install/step1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/ubooquity_install/step2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, start to create a container by clicking on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced Settings&lt;/code&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/ubooquity_install/step3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;General Settings&lt;/code&gt; tab, check the checkbox on “Enable auto-restart” (Optional)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/ubooquity_install/step4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Volume&lt;/code&gt; tab, you’ll need to create at least two folders: a configuration folder and a comics/raw/books folder. You should put the path to the Comics folder and set the mount path as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/comics&lt;/code&gt;, and the configuration folder with the mount path &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/config&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/ubooquity_install/step5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, you may wish to bring everything a level up in the directory. In order to do so, here’s an example that you may wish to use:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;File/Folder&lt;/th&gt;
      &lt;th&gt;Mount path&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;docker/ubooquity&lt;/td&gt;
      &lt;td&gt;/config&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;my_files/Comics/Marvel&lt;/td&gt;
      &lt;td&gt;/Marvel&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;my_files/Comics/DC&lt;/td&gt;
      &lt;td&gt;/DC&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;my_files/Comics/Others&lt;/td&gt;
      &lt;td&gt;/Others&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;And then, later, when you are as the administrator, you need to go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Comics&lt;/code&gt; tab, and under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shared folders&lt;/code&gt;, click on the button &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ADD FOLDER&lt;/code&gt;, and add the folders &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Marvel&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/DC&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Others&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Port Settings&lt;/code&gt; tab, there will already be two local ports. In my experience, I wasn’t able to get it to work properly with the defaults, so I simply replaced &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Auto&lt;/code&gt; with the same port number&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/ubooquity_install/step6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, under the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Environment&lt;/code&gt; tab, add in the variables &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PGID&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PUID&lt;/code&gt; with the values obtained from running the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; command above (i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;uid&amp;gt;&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;gid&amp;gt;&lt;/code&gt; respectively)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/ubooquity_install/step7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, you’ll have created a container. Next, you’ll need to go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;server-ip&amp;gt;:2203/ubooquity/admin&lt;/code&gt; to set up an admin password, and then it you’ll be able to see its settings. In order to access your server, go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;server-ip&amp;gt;:2202/ubooquity&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;accessing-the-server&quot;&gt;Accessing the Server&lt;/h2&gt;

&lt;h3 id=&quot;android---kuboo&quot;&gt;Android - Kuboo&lt;/h3&gt;

&lt;p&gt;You can access your server via different ways now. One way is &lt;a href=&quot;https://github.com/sethchhim/Kuboo&quot;&gt;Kuboo&lt;/a&gt; developed by Seth Chhim&lt;/p&gt;

&lt;p&gt;First, in the admin comfiguration, in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced&lt;/code&gt; tab, you need to check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enable OPDS feed&lt;/code&gt;, which will allow your books and comics to be accessed to the server via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;server-ip&amp;gt;:2202/opds-books&lt;/code&gt; in the application on Android.&lt;/p&gt;

&lt;p&gt;In order to access it remotely, ideally you should have already set a external website. In many cases, it is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;chosen-name&amp;gt;.synology.me&lt;/code&gt;. In your router, you need to &lt;a href=&quot;nicolasshu.com/port_forwarding_netgear.html&quot;&gt;allow for the ports to be forwarded&lt;/a&gt;. In this case, you need to forward the port 2202. Once that has been done, you should be able to access it via 
https://choosename.synology.me:2202/ubooquity&lt;/p&gt;

&lt;h3 id=&quot;ipad---chunky-comic-reader&quot;&gt;iPad - Chunky Comic Reader&lt;/h3&gt;

&lt;p&gt;You can access it via &lt;a href=&quot;https://apps.apple.com/pe/app/chunky-comic-reader/id663567628?l=en&quot;&gt;Chunky Comic Reader&lt;/a&gt; for the iPad&lt;/p&gt;

&lt;h2 id=&quot;alternative&quot;&gt;Alternative&lt;/h2&gt;

&lt;p&gt;If you have enabled Samba or FTP on your server, you can access your files directly (or via FTP) via the application &lt;a href=&quot;https://www.cdisplayex.com/&quot;&gt;CDisplay Ex&lt;/a&gt;. I always loved using the program [CDisplay] by David Ayton, but he passed away in 2003, where Derek Quenneville continued hosting his website. Then a guy (unnamed) continued his work with CDisplay Ex. He actually does a really good job in bringing back CDisplay, and he made an Android application. This is in fact my application of choice for reading via SMB.&lt;/p&gt;

&lt;p&gt;In order to access the files via Samba, you need to set one (or both) of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Samba (for local access) - This is nice so that you don’t have to download anything
    &lt;ul&gt;
      &lt;li&gt;Description: Anything&lt;/li&gt;
      &lt;li&gt;Scheme: Samba&lt;/li&gt;
      &lt;li&gt;Host name: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;name-of-server&amp;gt;&lt;/code&gt; (e.g. Brainiac)&lt;/li&gt;
      &lt;li&gt;Username: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;username-to-server&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Password: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;password&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Path: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;path/to/comics&amp;gt;&lt;/code&gt; (e.g. /avatar/Comics/)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;FTP (for remote access)
    &lt;ul&gt;
      &lt;li&gt;Description: Anything&lt;/li&gt;
      &lt;li&gt;Scheme: Ftp&lt;/li&gt;
      &lt;li&gt;Host name: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;name&amp;gt;.synology.me&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Username: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;username-to-server&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Password: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;password&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Path: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;path/to/comics&amp;gt;&lt;/code&gt; (e.g. /avatar/Comics/)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><category term="Server" /><summary type="html">This is a guide to install Ubooquity on a Synology NAS. There hasn’t been many good instructions to install it, and for fools like me, it’s good to sometimes go step by step. Note that this method is to install it using Docker. First off, SSH into your server. Ideally, your server will be something like 192.168.1.XX ssh &amp;lt;username&amp;gt;@&amp;lt;server-ip&amp;gt; Next, figure out your PGID and PUID by running the command id &amp;lt;username&amp;gt;@&amp;lt;server-ip&amp;gt;$ id uid=&amp;lt;uid&amp;gt;(&amp;lt;username&amp;gt;) gid=&amp;lt;gid&amp;gt;(&amp;lt;username&amp;gt;) Next, assuming you’ve already installed Docker from the Package Manager, go to the Docker directory, and create a directory called ubooquity. Here is where all of the config files will be located. Next, open up Docker, and in the Registry tab, look up linuxserver/ubooquity. Once you find it, install it. Next, start to create a container by clicking on the Advanced Settings button. Under the General Settings tab, check the checkbox on “Enable auto-restart” (Optional) Under the Volume tab, you’ll need to create at least two folders: a configuration folder and a comics/raw/books folder. You should put the path to the Comics folder and set the mount path as /comics, and the configuration folder with the mount path /config. Alternatively, you may wish to bring everything a level up in the directory. In order to do so, here’s an example that you may wish to use: File/Folder Mount path docker/ubooquity /config my_files/Comics/Marvel /Marvel my_files/Comics/DC /DC my_files/Comics/Others /Others And then, later, when you are as the administrator, you need to go to the Comics tab, and under Shared folders, click on the button ADD FOLDER, and add the folders /Marvel, /DC, and Others. Under the Port Settings tab, there will already be two local ports. In my experience, I wasn’t able to get it to work properly with the defaults, so I simply replaced Auto with the same port number Finally, under the Environment tab, add in the variables PGID and PUID with the values obtained from running the id command above (i.e. &amp;lt;uid&amp;gt; and &amp;lt;gid&amp;gt; respectively) Now, you’ll have created a container. Next, you’ll need to go to the &amp;lt;server-ip&amp;gt;:2203/ubooquity/admin to set up an admin password, and then it you’ll be able to see its settings. In order to access your server, go to &amp;lt;server-ip&amp;gt;:2202/ubooquity Accessing the Server Android - Kuboo You can access your server via different ways now. One way is Kuboo developed by Seth Chhim First, in the admin comfiguration, in the Advanced tab, you need to check the Enable OPDS feed, which will allow your books and comics to be accessed to the server via &amp;lt;server-ip&amp;gt;:2202/opds-books in the application on Android. In order to access it remotely, ideally you should have already set a external website. In many cases, it is &amp;lt;chosen-name&amp;gt;.synology.me. In your router, you need to allow for the ports to be forwarded. In this case, you need to forward the port 2202. Once that has been done, you should be able to access it via https://choosename.synology.me:2202/ubooquity iPad - Chunky Comic Reader You can access it via Chunky Comic Reader for the iPad Alternative If you have enabled Samba or FTP on your server, you can access your files directly (or via FTP) via the application CDisplay Ex. I always loved using the program [CDisplay] by David Ayton, but he passed away in 2003, where Derek Quenneville continued hosting his website. Then a guy (unnamed) continued his work with CDisplay Ex. He actually does a really good job in bringing back CDisplay, and he made an Android application. This is in fact my application of choice for reading via SMB. In order to access the files via Samba, you need to set one (or both) of the following: Samba (for local access) - This is nice so that you don’t have to download anything Description: Anything Scheme: Samba Host name: &amp;lt;name-of-server&amp;gt; (e.g. Brainiac) Username: &amp;lt;username-to-server&amp;gt; Password: &amp;lt;password&amp;gt; Path: &amp;lt;path/to/comics&amp;gt; (e.g. /avatar/Comics/) FTP (for remote access) Description: Anything Scheme: Ftp Host name: &amp;lt;name&amp;gt;.synology.me Username: &amp;lt;username-to-server&amp;gt; Password: &amp;lt;password&amp;gt; Path: &amp;lt;path/to/comics&amp;gt; (e.g. /avatar/Comics/)</summary></entry><entry><title type="html">Pytorch_dropout</title><link href="http://localhost:4000/2020/10/13/pytorch_dropout.html" rel="alternate" type="text/html" title="Pytorch_dropout" /><published>2020-10-13T00:00:00-04:00</published><updated>2020-10-13T00:00:00-04:00</updated><id>http://localhost:4000/2020/10/13/pytorch_dropout</id><content type="html" xml:base="http://localhost:4000/2020/10/13/pytorch_dropout.html">&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# %%
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dropout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# %%
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# %%
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><summary type="html"># %% drop = nn.Dropout() x = torch.ones(1,10) # %% drop.train() drop(x) # %% drop.eval() drop(x)</summary></entry><entry><title type="html">Breaking Zip files into Multiple Parts</title><link href="http://localhost:4000/zip_multipart.html" rel="alternate" type="text/html" title="Breaking Zip files into Multiple Parts" /><published>2020-10-09T00:00:00-04:00</published><updated>2020-10-09T00:00:00-04:00</updated><id>http://localhost:4000/zip_breakdown</id><content type="html" xml:base="http://localhost:4000/zip_multipart.html">&lt;p&gt;Sometimes zip files may be too big, so you could break them for easier transfer. Assuming you have a large zip file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dataset.zip&lt;/code&gt; and you wish to split it into 300MB parts. You can do so with&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zip dataset.zip &lt;span class=&quot;nt&quot;&gt;--out&lt;/span&gt; dataparts &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 300m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will then create a bunch of files called&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dataparts.zip
dataparts.z01
dataparts.z02
dataparts.z03
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In order to collect them back together, you can use&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zip &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; dataparts.zip &lt;span class=&quot;nt&quot;&gt;--out&lt;/span&gt; new_dataset.zip
&lt;span class=&quot;c&quot;&gt;# or &lt;/span&gt;
zip &lt;span class=&quot;nt&quot;&gt;--fix&lt;/span&gt; dataparts.zip &lt;span class=&quot;nt&quot;&gt;--out&lt;/span&gt; new_dataset.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you can unzip them with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unzip&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;
&lt;p&gt;[1] &lt;a href=&quot;https://superuser.com/questions/336219/how-do-i-split-a-zip-file-into-multiple-segments&quot;&gt;Daniel Beck’s Answer&lt;/a&gt;&lt;/p&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><category term="Linux" /><summary type="html">Sometimes zip files may be too big, so you could break them for easier transfer. Assuming you have a large zip file called dataset.zip and you wish to split it into 300MB parts. You can do so with zip dataset.zip --out dataparts -s 300m This will then create a bunch of files called dataparts.zip dataparts.z01 dataparts.z02 dataparts.z03 ... In order to collect them back together, you can use zip -F dataparts.zip --out new_dataset.zip # or zip --fix dataparts.zip --out new_dataset.zip Then you can unzip them with unzip Resources [1] Daniel Beck’s Answer</summary></entry><entry><title type="html">Precision, Recall, and F1 Score</title><link href="http://localhost:4000/precision_recall_f1.html" rel="alternate" type="text/html" title="Precision, Recall, and F1 Score" /><published>2020-10-06T00:00:00-04:00</published><updated>2020-10-06T00:00:00-04:00</updated><id>http://localhost:4000/precision_recall_f1</id><content type="html" xml:base="http://localhost:4000/precision_recall_f1.html">&lt;h2 id=&quot;why&quot;&gt;Why?&lt;/h2&gt;

&lt;p&gt;Precision, recall, and F1 score is always something I have a problem understanding, so I have decided to write this to help myself remember every time I forget. Let us first define some evaluation metrics, and then, we will go into precision, recall, and finally the F1 score&lt;/p&gt;

&lt;h2 id=&quot;evaluation-metrics-definitions&quot;&gt;Evaluation Metrics Definitions&lt;/h2&gt;

&lt;h3 id=&quot;false-positive--false-alarm--type-i-error&quot;&gt;False Positive / False Alarm / Type I Error&lt;/h3&gt;

&lt;p&gt;This is when something is marked as positive, but in reality, it isn’t positive.&lt;/p&gt;

&lt;p&gt;E.g. A patient who is diagnosed to have cancer, but in reality, does not have cancer is a false positive.&lt;/p&gt;

&lt;h3 id=&quot;false-negative--miss--type-ii-error&quot;&gt;False Negative / Miss / Type II Error&lt;/h3&gt;

&lt;p&gt;This is when something is marked as negative, but actually it was positive.&lt;/p&gt;

&lt;p&gt;E.g. A patient goes to a physician, but is sent home because the physician said he was fine. If, in reality (s)he had a disease, (s)he is a false negative.&lt;/p&gt;

&lt;h3 id=&quot;sensitivity--recall--hit-rate--true-positive-rate&quot;&gt;Sensitivity / Recall / Hit Rate / True Positive Rate&lt;/h3&gt;

\[TPR = \frac{TP}{P} = \frac{TP}{TP + FN} = \text{How many positive cases are actually positive?}\]

&lt;p&gt;This says how often did an agent classify something as positive when that sample was in fact positive. In other words, the proportion of positives that are correctly identified.&lt;/p&gt;

&lt;p&gt;E.g. Percentage of sick people to be correctly identified as being sick.&lt;/p&gt;

&lt;h3 id=&quot;specificity--selectivity--true-negative-rate&quot;&gt;Specificity / Selectivity / True Negative Rate&lt;/h3&gt;

\[TNR=\frac{TN}{N} = \frac{TN}{TN+FP} = \text{How many negative cases are actually negative?}\]

&lt;p&gt;This says how often did an agent classify something as negative when that sample was in fact negative. In other words, it measures the proportion of negatives that are correctly identified.&lt;/p&gt;

&lt;p&gt;E.g. The percentage of healthy people who are actually identified as being healthy.&lt;/p&gt;

&lt;h3 id=&quot;precision--positive-predictive-value&quot;&gt;Precision / Positive Predictive Value&lt;/h3&gt;

\[PPV=\frac{TP}{TP+FP}\]

&lt;p&gt;This tries to answer what proportion of positive identifications were actually correct. An agent that produces no false positives has a precision of 1.&lt;/p&gt;

&lt;h2 id=&quot;precision-and-recall&quot;&gt;Precision and Recall&lt;/h2&gt;

&lt;p&gt;Let us remember the definitions of precision and recall:&lt;/p&gt;

\[\text{precision} = \frac{TP}{TP+\color{yellowgreen}{FP}} \quad \quad \quad \text{recall}=\frac{TP}{TP+\color{cyan}{FN}}\]

&lt;p&gt;Ideally, you want to have both precision and recall to be equal to 1. As one can see, when you choose to focus more on precision, it means that you choose to minimize the false positives. When you choose to focus on recall, you want to lower the number of false negatives. Now, why would we want to have precision and recall? Isn’t accuracy enough?&lt;/p&gt;

&lt;h3 id=&quot;example-why-do-we-need-precisionrecall&quot;&gt;Example: Why do we need precision/recall?&lt;/h3&gt;

&lt;p&gt;Let us consider another scenario, where we have 9990 healthy patients and 10 progeria patients. Progeria is an extremely rare disorder where kids have a mutation at the gene which encodes the protein lamin A, which promotes genetic stability. This is one of those extremely rare diseases, which has an occurence of 1 every 20 million people. Let’s say we have a model, regardless of the patient, the model diagnoses as a negative&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;patient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means that this model will have have a 99.9% accuracy. However, we know very well that this model just misdiagnosed every single cancer patient! :O What happens if we compute precision and recall?&lt;/p&gt;

\[\begin{align}
\text{precision}&amp;amp;=\frac{0}{0+0}=undefined\\
\text{recall}&amp;amp;= \frac{0}{0+10} = 0.0
\end{align}\]

&lt;p&gt;This starts to tell us a better story! Here, recall tells us that it has gotten none of the sick patients! And here, since there are no positive predictions, then it is defined. Let us start to have a better interpretation of these two values.&lt;/p&gt;

&lt;h3 id=&quot;example-interpretation&quot;&gt;Example: Interpretation&lt;/h3&gt;

&lt;p&gt;A doctor diagnosed a number of patients and in the end, he found out that there were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;True Positives: 5&lt;/li&gt;
  &lt;li&gt;False Positives: 2&lt;/li&gt;
  &lt;li&gt;False Negatives: 8&lt;/li&gt;
  &lt;li&gt;True Negatives: 30&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here, we calculate that the precision is 71% and the recall is 38%. What does this mean?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(Precision) When the doctor predicts a patient is sick, (s)he is correct 71% of the time&lt;/li&gt;
  &lt;li&gt;(Recall) This doctor correctly identifies 38% of all of the sick patients&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In other words, the two metrics try to answer the following questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(Precision) Of the people who are diagnosed as sick, how many are &lt;em&gt;actually&lt;/em&gt;  sick?&lt;/li&gt;
  &lt;li&gt;(Recall) Of the people that are actually sick, how many are diagnosed as sick?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;behavior-of-trade-off&quot;&gt;Behavior of Trade-Off&lt;/h3&gt;

&lt;p&gt;It is often the case that when you elevate the precision, you lower the recall and vice versa. This happens because, let us consider the following distribution, where a classifier tries to determine a threshold where the right is classified as positive (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;o&lt;/code&gt;), and the left as negative (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x x x x o x x x o x o x o o o o 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let us start with the following case, with a precision of 0.75, and recall of 0.86&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x x x x o x x x|o x o x o o o o       TP: 6 | FP: 2 | TN: 7 | FN: 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to increase the precision, you want to minimize the false positives, you move the threshold to the right. This yields a precision of 1.00, and a recall of 0.57.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x x x x o x x x o x o x|o o o o       TP: 4 | FP: 0 | TN: 9 | FN: 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to increase the recall, you want to minimize the false negatives, you move the threshold to the left. This yields a precision of 0.58, and a recall of 1.00&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x x x x|o x x x o x o x o o o o       TP: 7 | FP: 5 | TN: 4 | FN: 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So because you are taking one risk (e.g. FP/FN) over the other (e.g. FN/FP), the precision and recall are often inversely related.&lt;/p&gt;

&lt;h3 id=&quot;which-to-focus-on-precision-or-recall&quot;&gt;Which to focus on? Precision or Recall?&lt;/h3&gt;

&lt;p&gt;So which one do we care about? Depending on the problem scenario, you may wish to focus more on recall or on precision. For example, if we are dealing with a scenario where a positive sample is an aggressive case of a disease. This is an example in which you shouldn’t care much about the false positive cases, but you’d likely want to minimize the false negative cases. In other words, you’d much rather tell a patient (s)he has a disease even if (s)he doesn’t have it, than to miss it by saying that (s)he doesn’t have it, and saying: “Whoops! My bad.”&lt;/p&gt;

&lt;p&gt;Alternatively, in a judicial system, you might want to have a low recall and a high precision. By having such system, it results in you maybe letting some guilty people go, however, you want to make sure that when you sentence someone to prison, you want to be absolutely 100% sure that that individual committed the crime. Otherwise, you’ll be punishing an innocent person.&lt;/p&gt;

&lt;h2 id=&quot;f_1-score-and-f_beta-score&quot;&gt;F$_1$ Score and F\(_\beta\) Score&lt;/h2&gt;

&lt;p&gt;As one can see from the above, the precision and recall are two quantities which hard to compare between two models. For example, let us say that there are two physicians who, when seeing their performance, they end up having&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Metric&lt;/th&gt;
      &lt;th&gt;Physician A&lt;/th&gt;
      &lt;th&gt;Physician B&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Precision&lt;/td&gt;
      &lt;td&gt;60%&lt;/td&gt;
      &lt;td&gt;50%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Recall&lt;/td&gt;
      &lt;td&gt;70%&lt;/td&gt;
      &lt;td&gt;80%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Which one performs best? This really depends on whether you care more about the precision or recall. However, ideally it would be nice to have a single metric that allows one to have a normalized idea of who is better. This is when the F-measure was introduced in 1992 at the Fource Message Understanding Conference [2].&lt;/p&gt;

&lt;p&gt;Remember that we want to have both precision and recall to be closest to 1.0 as possible. Let us say that we have a model to determine a disease that has a precision and recall to be 0.9 and 0.1 respectively. If we are to take the arithmetic mean to be 0.5. But this makes no sense, does it? Because it is basically doing terrible in catching the disease! If we were to calculate the harmonic mean, it would be 0.33.&lt;/p&gt;

\[\begin{align}
\mu_a &amp;amp;= \frac{precision+recall}{2} = \frac{0.9+0.1}{2} = 0.50 \\
\mu_h &amp;amp;= \frac{1}{\frac{1}{2}\frac{1}{precision} + \frac{1}{2}\frac{1}{recall}} = \frac{2}{\frac{1}{0.9} + \frac{1}{0.1}} = 0.33
\end{align}\]

&lt;p&gt;This is a much better depiction of how the model is actually performing!&lt;/p&gt;

&lt;p&gt;So the F1 score is in fact the harmonic mean between precision and recall:&lt;/p&gt;

\[F_1 = \frac{2 \cdot precision \cdot recall}{precision \cdot recall}\]

&lt;h3 id=&quot;derivation-and-understanding-of-the-f-measure&quot;&gt;Derivation and Understanding of the F-Measure&lt;/h3&gt;

&lt;p&gt;Now, where does this come from? The proper definition of the generalized F-measure, which is known as the $F_\beta$-score is 
\(F_\beta = (1+\beta^2)\frac{PR}{\beta^2P+R} \quad s.t. \quad 0 \leq \beta \leq \infty \quad [\text{Chinchor, 1992}]\)
 where $\beta$ is a parameter which controls the balance between your precision and recall preferences.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;$\beta$&lt;/th&gt;
      &lt;th&gt;Result&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;$=1$&lt;/td&gt;
      &lt;td&gt;Equals the harmonic mean&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$&amp;gt;1$&lt;/td&gt;
      &lt;td&gt;Focuses more on the recall&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$&amp;lt;1$&lt;/td&gt;
      &lt;td&gt;Focuses more on the precision&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;$=0$&lt;/td&gt;
      &lt;td&gt;$F_0 = P$&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Technically, van Rijsbergen defined an effectiveness funcion $E$ in 1979, which is defined as&lt;/p&gt;

\[E = 1 - \frac{1}{\alpha \frac{1}{P} + (1-\alpha)\frac{1}{R}}\]

&lt;p&gt;When we set $\alpha = (1+\beta^2)^{-1}$, we have&lt;/p&gt;

\[\begin{align}
E &amp;amp;= 1 - \frac{1}{\alpha \frac{1}{P} + (1-\alpha)\frac{1}{R}} \\
&amp;amp;= 1 - \frac{1}{\frac{1}{1+\beta^2} \frac{1}{P} + \left(1-\frac{1}{1+\beta^2}\right)\frac{1}{R}} \\
&amp;amp;= 1 - \frac{1}{\frac{\beta^2 + 1-1}{1+\beta^2} \frac{1}{P} + \frac{1}{1+\beta^2} \frac{1}{R}} \\ 
&amp;amp;= 1 - (1+\beta^2)\frac{PR}{\beta^2 P + R} \\
&amp;amp;= 1 - F_\beta
\end{align}\]

&lt;p&gt;So, we can consider&lt;/p&gt;

\[F_\beta = \frac{1}{\alpha \frac{1}{P} + (1-\alpha)\frac{1}{R}} \quad s.t. \quad 0\leq \alpha \leq 1\]

&lt;p&gt;And note that $F_{\alpha=0.5} = F_{\beta=1}$, thus making $F_1$ being the harmonic mean of the precision and recall.&lt;/p&gt;

&lt;h3 id=&quot;why-beta2-and-not-beta&quot;&gt;Why $\beta^2$ and not $\beta$?&lt;/h3&gt;

&lt;p&gt;When the gradients of the efficiency (also for the F-measure) with respect to precision and recall are equal, it means that the ratio of recall to precision is the desired ratio.&lt;/p&gt;

\[\frac{\partial E}{\partial P} = - \frac{R[\alpha R + (1-\alpha)P] - PR(1-\alpha)}{(\alpha R + (1-\alpha)P)^2}\\
\frac{\partial E}{\partial R} = - \frac{P[\alpha R + (1-\alpha)P] - PR\alpha}{(\alpha R + (1-\alpha)P)^2}\]

\[\begin{align}
\frac{R[\alpha R + (1-\alpha)P] - PR(1-\alpha)}{(\alpha R + (1-\alpha)P)^2} &amp;amp;= \frac{P[\alpha R + (1-\alpha)P] - PR\alpha}{(\alpha R + (1-\alpha)P)^2} \\
R[\alpha R + (1-\alpha)P] - PR(1-\alpha) &amp;amp;= P[\alpha R + (1-\alpha)P] - PR\alpha \\
\alpha^2R^2 &amp;amp;= (1-\alpha)P^2\\
\end{align}\]

&lt;p&gt;Since $\beta=R/P$, we can replace $R$ with $\beta P^2$,  we can say&lt;/p&gt;

\[\begin{align}
\alpha \beta^2 P^2 &amp;amp;= (1-\alpha) P^2\\ 
\alpha \beta^2 &amp;amp;= 1-\alpha\\ 
\alpha (\beta^2+1) &amp;amp;= 1\\ 
\alpha &amp;amp;= \frac{1}{\beta^2+1}\\ 
\end{align}\]

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;p&gt;[1] &lt;a href=&quot;../assets/pdf/Sasaki_2007_The Truth of the F-measure.pdf&quot;&gt;The Truth of the F-Measure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&quot;../assets/pdf/M92-1001.pdf&quot;&gt;Overview of the Fourth Message Understanding Evaluation and Conference&lt;/a&gt;&lt;/p&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><category term="Math" /><category term="Machine Learning" /><summary type="html">Why? Precision, recall, and F1 score is always something I have a problem understanding, so I have decided to write this to help myself remember every time I forget. Let us first define some evaluation metrics, and then, we will go into precision, recall, and finally the F1 score Evaluation Metrics Definitions False Positive / False Alarm / Type I Error This is when something is marked as positive, but in reality, it isn’t positive. E.g. A patient who is diagnosed to have cancer, but in reality, does not have cancer is a false positive. False Negative / Miss / Type II Error This is when something is marked as negative, but actually it was positive. E.g. A patient goes to a physician, but is sent home because the physician said he was fine. If, in reality (s)he had a disease, (s)he is a false negative. Sensitivity / Recall / Hit Rate / True Positive Rate \[TPR = \frac{TP}{P} = \frac{TP}{TP + FN} = \text{How many positive cases are actually positive?}\] This says how often did an agent classify something as positive when that sample was in fact positive. In other words, the proportion of positives that are correctly identified. E.g. Percentage of sick people to be correctly identified as being sick. Specificity / Selectivity / True Negative Rate \[TNR=\frac{TN}{N} = \frac{TN}{TN+FP} = \text{How many negative cases are actually negative?}\] This says how often did an agent classify something as negative when that sample was in fact negative. In other words, it measures the proportion of negatives that are correctly identified. E.g. The percentage of healthy people who are actually identified as being healthy. Precision / Positive Predictive Value \[PPV=\frac{TP}{TP+FP}\] This tries to answer what proportion of positive identifications were actually correct. An agent that produces no false positives has a precision of 1. Precision and Recall Let us remember the definitions of precision and recall: \[\text{precision} = \frac{TP}{TP+\color{yellowgreen}{FP}} \quad \quad \quad \text{recall}=\frac{TP}{TP+\color{cyan}{FN}}\] Ideally, you want to have both precision and recall to be equal to 1. As one can see, when you choose to focus more on precision, it means that you choose to minimize the false positives. When you choose to focus on recall, you want to lower the number of false negatives. Now, why would we want to have precision and recall? Isn’t accuracy enough? Example: Why do we need precision/recall? Let us consider another scenario, where we have 9990 healthy patients and 10 progeria patients. Progeria is an extremely rare disorder where kids have a mutation at the gene which encodes the protein lamin A, which promotes genetic stability. This is one of those extremely rare diseases, which has an occurence of 1 every 20 million people. Let’s say we have a model, regardless of the patient, the model diagnoses as a negative def model(patient): return False This means that this model will have have a 99.9% accuracy. However, we know very well that this model just misdiagnosed every single cancer patient! :O What happens if we compute precision and recall? \[\begin{align} \text{precision}&amp;amp;=\frac{0}{0+0}=undefined\\ \text{recall}&amp;amp;= \frac{0}{0+10} = 0.0 \end{align}\] This starts to tell us a better story! Here, recall tells us that it has gotten none of the sick patients! And here, since there are no positive predictions, then it is defined. Let us start to have a better interpretation of these two values. Example: Interpretation A doctor diagnosed a number of patients and in the end, he found out that there were: True Positives: 5 False Positives: 2 False Negatives: 8 True Negatives: 30 Here, we calculate that the precision is 71% and the recall is 38%. What does this mean? (Precision) When the doctor predicts a patient is sick, (s)he is correct 71% of the time (Recall) This doctor correctly identifies 38% of all of the sick patients In other words, the two metrics try to answer the following questions: (Precision) Of the people who are diagnosed as sick, how many are actually sick? (Recall) Of the people that are actually sick, how many are diagnosed as sick? Behavior of Trade-Off It is often the case that when you elevate the precision, you lower the recall and vice versa. This happens because, let us consider the following distribution, where a classifier tries to determine a threshold where the right is classified as positive (o), and the left as negative (x). x x x x o x x x o x o x o o o o Let us start with the following case, with a precision of 0.75, and recall of 0.86 x x x x o x x x|o x o x o o o o TP: 6 | FP: 2 | TN: 7 | FN: 1 If you want to increase the precision, you want to minimize the false positives, you move the threshold to the right. This yields a precision of 1.00, and a recall of 0.57. x x x x o x x x o x o x|o o o o TP: 4 | FP: 0 | TN: 9 | FN: 3 If you want to increase the recall, you want to minimize the false negatives, you move the threshold to the left. This yields a precision of 0.58, and a recall of 1.00 x x x x|o x x x o x o x o o o o TP: 7 | FP: 5 | TN: 4 | FN: 0 So because you are taking one risk (e.g. FP/FN) over the other (e.g. FN/FP), the precision and recall are often inversely related. Which to focus on? Precision or Recall? So which one do we care about? Depending on the problem scenario, you may wish to focus more on recall or on precision. For example, if we are dealing with a scenario where a positive sample is an aggressive case of a disease. This is an example in which you shouldn’t care much about the false positive cases, but you’d likely want to minimize the false negative cases. In other words, you’d much rather tell a patient (s)he has a disease even if (s)he doesn’t have it, than to miss it by saying that (s)he doesn’t have it, and saying: “Whoops! My bad.” Alternatively, in a judicial system, you might want to have a low recall and a high precision. By having such system, it results in you maybe letting some guilty people go, however, you want to make sure that when you sentence someone to prison, you want to be absolutely 100% sure that that individual committed the crime. Otherwise, you’ll be punishing an innocent person. F$_1$ Score and F\(_\beta\) Score As one can see from the above, the precision and recall are two quantities which hard to compare between two models. For example, let us say that there are two physicians who, when seeing their performance, they end up having Metric Physician A Physician B Precision 60% 50% Recall 70% 80% Which one performs best? This really depends on whether you care more about the precision or recall. However, ideally it would be nice to have a single metric that allows one to have a normalized idea of who is better. This is when the F-measure was introduced in 1992 at the Fource Message Understanding Conference [2]. Remember that we want to have both precision and recall to be closest to 1.0 as possible. Let us say that we have a model to determine a disease that has a precision and recall to be 0.9 and 0.1 respectively. If we are to take the arithmetic mean to be 0.5. But this makes no sense, does it? Because it is basically doing terrible in catching the disease! If we were to calculate the harmonic mean, it would be 0.33. \[\begin{align} \mu_a &amp;amp;= \frac{precision+recall}{2} = \frac{0.9+0.1}{2} = 0.50 \\ \mu_h &amp;amp;= \frac{1}{\frac{1}{2}\frac{1}{precision} + \frac{1}{2}\frac{1}{recall}} = \frac{2}{\frac{1}{0.9} + \frac{1}{0.1}} = 0.33 \end{align}\] This is a much better depiction of how the model is actually performing! So the F1 score is in fact the harmonic mean between precision and recall: \[F_1 = \frac{2 \cdot precision \cdot recall}{precision \cdot recall}\] Derivation and Understanding of the F-Measure Now, where does this come from? The proper definition of the generalized F-measure, which is known as the $F_\beta$-score is \(F_\beta = (1+\beta^2)\frac{PR}{\beta^2P+R} \quad s.t. \quad 0 \leq \beta \leq \infty \quad [\text{Chinchor, 1992}]\) where $\beta$ is a parameter which controls the balance between your precision and recall preferences. $\beta$ Result $=1$ Equals the harmonic mean $&amp;gt;1$ Focuses more on the recall $&amp;lt;1$ Focuses more on the precision $=0$ $F_0 = P$ Technically, van Rijsbergen defined an effectiveness funcion $E$ in 1979, which is defined as \[E = 1 - \frac{1}{\alpha \frac{1}{P} + (1-\alpha)\frac{1}{R}}\] When we set $\alpha = (1+\beta^2)^{-1}$, we have \[\begin{align} E &amp;amp;= 1 - \frac{1}{\alpha \frac{1}{P} + (1-\alpha)\frac{1}{R}} \\ &amp;amp;= 1 - \frac{1}{\frac{1}{1+\beta^2} \frac{1}{P} + \left(1-\frac{1}{1+\beta^2}\right)\frac{1}{R}} \\ &amp;amp;= 1 - \frac{1}{\frac{\beta^2 + 1-1}{1+\beta^2} \frac{1}{P} + \frac{1}{1+\beta^2} \frac{1}{R}} \\ &amp;amp;= 1 - (1+\beta^2)\frac{PR}{\beta^2 P + R} \\ &amp;amp;= 1 - F_\beta \end{align}\] So, we can consider \[F_\beta = \frac{1}{\alpha \frac{1}{P} + (1-\alpha)\frac{1}{R}} \quad s.t. \quad 0\leq \alpha \leq 1\] And note that $F_{\alpha=0.5} = F_{\beta=1}$, thus making $F_1$ being the harmonic mean of the precision and recall. Why $\beta^2$ and not $\beta$? When the gradients of the efficiency (also for the F-measure) with respect to precision and recall are equal, it means that the ratio of recall to precision is the desired ratio. \[\frac{\partial E}{\partial P} = - \frac{R[\alpha R + (1-\alpha)P] - PR(1-\alpha)}{(\alpha R + (1-\alpha)P)^2}\\ \frac{\partial E}{\partial R} = - \frac{P[\alpha R + (1-\alpha)P] - PR\alpha}{(\alpha R + (1-\alpha)P)^2}\] \[\begin{align} \frac{R[\alpha R + (1-\alpha)P] - PR(1-\alpha)}{(\alpha R + (1-\alpha)P)^2} &amp;amp;= \frac{P[\alpha R + (1-\alpha)P] - PR\alpha}{(\alpha R + (1-\alpha)P)^2} \\ R[\alpha R + (1-\alpha)P] - PR(1-\alpha) &amp;amp;= P[\alpha R + (1-\alpha)P] - PR\alpha \\ \alpha^2R^2 &amp;amp;= (1-\alpha)P^2\\ \end{align}\] Since $\beta=R/P$, we can replace $R$ with $\beta P^2$, we can say \[\begin{align} \alpha \beta^2 P^2 &amp;amp;= (1-\alpha) P^2\\ \alpha \beta^2 &amp;amp;= 1-\alpha\\ \alpha (\beta^2+1) &amp;amp;= 1\\ \alpha &amp;amp;= \frac{1}{\beta^2+1}\\ \end{align}\] Resources [1] The Truth of the F-Measure [2] Overview of the Fourth Message Understanding Evaluation and Conference</summary></entry><entry><title type="html">Zotero Setup</title><link href="http://localhost:4000/zotero_setup.html" rel="alternate" type="text/html" title="Zotero Setup" /><published>2020-10-05T00:00:00-04:00</published><updated>2020-10-05T00:00:00-04:00</updated><id>http://localhost:4000/zotero_setup</id><content type="html" xml:base="http://localhost:4000/zotero_setup.html">&lt;h1 id=&quot;why&quot;&gt;Why?&lt;/h1&gt;

&lt;p&gt;We all know that for literature review, we all have to manage multiple papers, and sometimes it can turn very cumbersome to keep track of all of them. A reference management software is very helpful for such tasks! Prior to this, I used &lt;a href=&quot;https://www.mendeley.com/&quot;&gt;Mendeley&lt;/a&gt; which works well and all, but there are a lot of strings attached with it. It is a closed source software, and it was purchased by Elsevier, which, in my opinion is a really corrupt company. Plus, at the time that I stopped using Mendeley, storage plans were only possible via their servers. This meant that you could have at most 2GB of free storage, and you’d have to pay $55/year for 5GB, $110/year for 10GB, or $165/year for unlimited storage. I really dislike Elsevier and I didn’t want to pay for such low amount of storage. I mean, Google Drive offers $30/year for 200GB. Elsevier always tries to get money from people for their lowest amount of efforts. So, I switched to Zotero. Initially, it was a little hard, but I then got used to it. So here’s a guide to get a full working Zotero platform, as well as setting it up for back ups.&lt;/p&gt;

&lt;h1 id=&quot;installation--setup&quot;&gt;Installation &amp;amp; Setup&lt;/h1&gt;

&lt;h2 id=&quot;install-zotero-standalone&quot;&gt;Install Zotero Standalone&lt;/h2&gt;

&lt;p&gt;On Linux, I have found over the years that the easiest way to get it installed in Linux is via a Snap Package. If you are using a Debian system, it’s helpful to have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snapd&lt;/code&gt; already installed.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt update
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;snapd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then install it via&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;snap &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;zotero-snap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;install-a-cloud-syncing-service-optional&quot;&gt;Install a Cloud Syncing Service (Optional)&lt;/h2&gt;

&lt;p&gt;I suggest installing a cloud service that you may enjoy. Some may like &lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;, &lt;a href=&quot;https://www.google.com/intl/en_gh/drive/download/&quot;&gt;Google Drive&lt;/a&gt;, &lt;a href=&quot;https://www.box.com/&quot;&gt;Box&lt;/a&gt;, &lt;a href=&quot;https://mega.nz&quot;&gt;MEGA&lt;/a&gt;, or any other. I have my own server running &lt;a href=&quot;https://nextcloud.com/&quot;&gt;NextCloud&lt;/a&gt;, so I use that instead, but if you wish to use any of the previous ones, I am a huge fan of MEGA. I used to use Dropbox for the most part, but MEGA provides you with 50GB of free storage, so it becomes really easy to store lots of files. Whichever one, as long as you possess a destination folder in your system to use it, it’s all good! =]&lt;/p&gt;

&lt;h2 id=&quot;setup-zotero&quot;&gt;Setup Zotero&lt;/h2&gt;

&lt;p&gt;Once you have it installed, it should open, along with a Zotero Connector for your browser. I highly suggest to use the Zotero Connector&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/zotero_setup/zotero_connector.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On Zotero Preferences, I honestly prefer not to set anything on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sync&lt;/code&gt; tab so that there’s no confusion (for me) of where the files will go. I would, however, make note of where the data directory is located in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced&lt;/code&gt; tab, because we will need this later.&lt;/p&gt;

&lt;p&gt;Next install &lt;a href=&quot;zotfile.com&quot;&gt;Zotfile&lt;/a&gt; by simply going to their website and downloading their latest &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zotfile-*.xpi&lt;/code&gt;. Make sure to downloaded anywhere in your system (Firefox may prompt it to install it as an add-on).  Next, on Zotero, go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tools &amp;gt; Addons&lt;/code&gt; and install Zotfile from file by clicking on the gear icon, and clicking on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Install Add-on From File...&lt;/code&gt;. Find your file, and then restart Zotero.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/zotero_setup/zotfile_install.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;setup-zotfile&quot;&gt;Setup Zotfile&lt;/h2&gt;

&lt;p&gt;Now, let’s configure ZotFile. By going to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tools &amp;gt; ZotFile Preferences&lt;/code&gt;, go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;General Settings&lt;/code&gt; tab, and doing the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Source Folder - This allows Zotero, given that you’ve highlighted an item in Zotero, to add an attachment to that item. [&lt;a href=&quot;https://forums.zotero.org/discussion/74208/zotfile-not-scanning-folder-for-new-files&quot;&gt;source&lt;/a&gt;]. This can be anything of your interest. People usually use their Downloads folder.&lt;/li&gt;
  &lt;li&gt;Location of Files - This is where, ideally, if you installed a cloud syncing integration with your system, Zotero will place its files there. Here, if you choose to use a subfolder, depending by how you’ve set up the wildcards, it will place them in subfolders. For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/%w/%y&lt;/code&gt; will separate by the Journal/Publisher  and Year.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/zotero_setup/zotfile_preferences.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can then change the Renaming Rules to however you want. &lt;a href=&quot;http://zotfile.com/#renaming-rules&quot;&gt;ZotFile’s documentations&lt;/a&gt; provide a much better explanation on the wildcards for this. Go check it out! =]&lt;/p&gt;

&lt;h2 id=&quot;install-plugins&quot;&gt;Install Plugins&lt;/h2&gt;

&lt;p&gt;There are a lot of other &lt;a href=&quot;https://www.zotero.org/support/plugins&quot;&gt;plugins&lt;/a&gt; that you may wish to use. At the time of writing this post, I haven’t really explored most of them because I don’t particularly need much more than this.&lt;/p&gt;

&lt;h2 id=&quot;backup-and-restore&quot;&gt;Backup and Restore&lt;/h2&gt;

&lt;h3 id=&quot;backing-up-library&quot;&gt;Backing Up Library&lt;/h3&gt;

&lt;p&gt;Cool! Now, here’s where things took me a while to wrap my head around. Let’s go back to the preferences by going to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Edit &amp;gt; Preferences&lt;/code&gt;. If you go to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced&lt;/code&gt; tab, you’ll see the Data Directory Location.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/zotero_setup/zotero_preferences.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This directory is where your personal library information will be stored. To my understanding, the most important part is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zotero.sqlite&lt;/code&gt; file. In a Windows system, you will probably need to focus on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zotero.sqlite&lt;/code&gt; file and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;storage/&lt;/code&gt; directory. Make sure to back them up!&lt;/p&gt;

&lt;p&gt;For me, what I personally do is that I create hard links to my cloud syncing folder to these file(s) by writing&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ln&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;zotero_data_directory&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path_to_cloud_folder&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/zotero_backup
&lt;span class=&quot;c&quot;&gt;# or &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;ln&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;zotero_data_directory&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/zotero.sqlite &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;path_to_cloud_folder&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;/zotero_sqlite
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;restoring-library&quot;&gt;Restoring Library&lt;/h3&gt;

&lt;p&gt;Now, next time that you install Zotero again, go through all the steps above, and then, go to the data directory, and paste the {storage/, zotero.sqlite} or {zotero.sqlite} files from the backup folder on the new Zotero data directory. You may wish to save the about-to-be-replaced files on a temporary folder, but in the end of the day, you’ll want to replace them with your back up files to completely restore your library.&lt;/p&gt;

&lt;h1 id=&quot;annotating-pdf&quot;&gt;Annotating PDF&lt;/h1&gt;

&lt;p&gt;There are multiple ways that you can annotate your files. Mendeley has a built-in PDF annotator, but when I used it, I felt limited by the lack of features it had. I kind of find Zotero convenient that it allows me to make annotations with my chosen PDF annotators and that’s it.&lt;/p&gt;

&lt;p&gt;In Windows, my favorite PDF annotator of all time has to be &lt;a href=&quot;https://www.drawboard.com/pdf/&quot;&gt;Drawboard PDF&lt;/a&gt;. To this day, I still haven’t found anything that works better than it. In Linux, there’s an application called &lt;a href=&quot;https://xournalpp.github.io/&quot;&gt;Xournal++&lt;/a&gt; (aka Xournalpp, based on Xournal, but coded in C++), which gives you lots of different types of annotation features. It just can’t annotate your PDF in place, but with Zotero, you can add an annotated version of your paper as an attachment to your library.&lt;/p&gt;

&lt;h1 id=&quot;other-resources&quot;&gt;Other Resources&lt;/h1&gt;

&lt;p&gt;A lot of what I got it working came from&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nrel.colostate.edu/set-up-best-reference-manager/&quot;&gt;Stephen Chignell’s Post on Configuring Zotero&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://libguides.eku.edu/c.php?g=342&amp;amp;p=68290&quot;&gt;Eastern Kentucky University’s Library Guide on Backing Up Zotero&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><category term="Instructions" /><category term="Linux" /><summary type="html">Why? We all know that for literature review, we all have to manage multiple papers, and sometimes it can turn very cumbersome to keep track of all of them. A reference management software is very helpful for such tasks! Prior to this, I used Mendeley which works well and all, but there are a lot of strings attached with it. It is a closed source software, and it was purchased by Elsevier, which, in my opinion is a really corrupt company. Plus, at the time that I stopped using Mendeley, storage plans were only possible via their servers. This meant that you could have at most 2GB of free storage, and you’d have to pay $55/year for 5GB, $110/year for 10GB, or $165/year for unlimited storage. I really dislike Elsevier and I didn’t want to pay for such low amount of storage. I mean, Google Drive offers $30/year for 200GB. Elsevier always tries to get money from people for their lowest amount of efforts. So, I switched to Zotero. Initially, it was a little hard, but I then got used to it. So here’s a guide to get a full working Zotero platform, as well as setting it up for back ups. Installation &amp;amp; Setup Install Zotero Standalone On Linux, I have found over the years that the easiest way to get it installed in Linux is via a Snap Package. If you are using a Debian system, it’s helpful to have snapd already installed. sudo apt update sudo apt install snapd Then install it via sudo snap install zotero-snap Install a Cloud Syncing Service (Optional) I suggest installing a cloud service that you may enjoy. Some may like Dropbox, Google Drive, Box, MEGA, or any other. I have my own server running NextCloud, so I use that instead, but if you wish to use any of the previous ones, I am a huge fan of MEGA. I used to use Dropbox for the most part, but MEGA provides you with 50GB of free storage, so it becomes really easy to store lots of files. Whichever one, as long as you possess a destination folder in your system to use it, it’s all good! =] Setup Zotero Once you have it installed, it should open, along with a Zotero Connector for your browser. I highly suggest to use the Zotero Connector On Zotero Preferences, I honestly prefer not to set anything on the Sync tab so that there’s no confusion (for me) of where the files will go. I would, however, make note of where the data directory is located in the Advanced tab, because we will need this later. Next install Zotfile by simply going to their website and downloading their latest zotfile-*.xpi. Make sure to downloaded anywhere in your system (Firefox may prompt it to install it as an add-on). Next, on Zotero, go to Tools &amp;gt; Addons and install Zotfile from file by clicking on the gear icon, and clicking on Install Add-on From File.... Find your file, and then restart Zotero. Setup Zotfile Now, let’s configure ZotFile. By going to Tools &amp;gt; ZotFile Preferences, go to the General Settings tab, and doing the following: Source Folder - This allows Zotero, given that you’ve highlighted an item in Zotero, to add an attachment to that item. [source]. This can be anything of your interest. People usually use their Downloads folder. Location of Files - This is where, ideally, if you installed a cloud syncing integration with your system, Zotero will place its files there. Here, if you choose to use a subfolder, depending by how you’ve set up the wildcards, it will place them in subfolders. For example, /%w/%y will separate by the Journal/Publisher and Year. You can then change the Renaming Rules to however you want. ZotFile’s documentations provide a much better explanation on the wildcards for this. Go check it out! =] Install Plugins There are a lot of other plugins that you may wish to use. At the time of writing this post, I haven’t really explored most of them because I don’t particularly need much more than this. Backup and Restore Backing Up Library Cool! Now, here’s where things took me a while to wrap my head around. Let’s go back to the preferences by going to Edit &amp;gt; Preferences. If you go to the Advanced tab, you’ll see the Data Directory Location. This directory is where your personal library information will be stored. To my understanding, the most important part is the zotero.sqlite file. In a Windows system, you will probably need to focus on zotero.sqlite file and the storage/ directory. Make sure to back them up! For me, what I personally do is that I create hard links to my cloud syncing folder to these file(s) by writing ln {zotero_data_directory} {path_to_cloud_folder}/zotero_backup # or ln {zotero_data_directory}/zotero.sqlite {path_to_cloud_folder}/zotero_sqlite Restoring Library Now, next time that you install Zotero again, go through all the steps above, and then, go to the data directory, and paste the {storage/, zotero.sqlite} or {zotero.sqlite} files from the backup folder on the new Zotero data directory. You may wish to save the about-to-be-replaced files on a temporary folder, but in the end of the day, you’ll want to replace them with your back up files to completely restore your library. Annotating PDF There are multiple ways that you can annotate your files. Mendeley has a built-in PDF annotator, but when I used it, I felt limited by the lack of features it had. I kind of find Zotero convenient that it allows me to make annotations with my chosen PDF annotators and that’s it. In Windows, my favorite PDF annotator of all time has to be Drawboard PDF. To this day, I still haven’t found anything that works better than it. In Linux, there’s an application called Xournal++ (aka Xournalpp, based on Xournal, but coded in C++), which gives you lots of different types of annotation features. It just can’t annotate your PDF in place, but with Zotero, you can add an annotated version of your paper as an attachment to your library. Other Resources A lot of what I got it working came from Stephen Chignell’s Post on Configuring Zotero Eastern Kentucky University’s Library Guide on Backing Up Zotero</summary></entry><entry><title type="html">Turn Off Display with Lock (KDE 5.18)</title><link href="http://localhost:4000/2020/09/03/turnoff_display_lock.html" rel="alternate" type="text/html" title="Turn Off Display with Lock (KDE 5.18)" /><published>2020-09-03T00:00:00-04:00</published><updated>2020-09-03T00:00:00-04:00</updated><id>http://localhost:4000/2020/09/03/turnoff_display_lock</id><content type="html" xml:base="http://localhost:4000/2020/09/03/turnoff_display_lock.html">&lt;!-- When using KDE 5.18, in order to make your computer turn off its display after locking the screen, do the following.

Go to your __Systems Settings__, and go to the __Notifications__ section

Next, in the __Applications__, click on the _Configure..._ button. This will open a dialog of &quot;Notifications -&gt; Application Settings&quot;

Next, select the __Screen Saver__ application, and click on the _Configure Events..._ button.

Next, select the action of your choice (i.e. &quot;_Screen locked_&quot;), check the box _Run command_, and then enter the command below. The command below will run as soon as the screen gets locked.

```bash
/bin/sleep 5; /usr/bin/xset dpms force off
``` --&gt;</content><author><name>Nick Shu</name></author><category term="Instructions" /><summary type="html"></summary></entry><entry><title type="html">Mounting a Local Server</title><link href="http://localhost:4000/2020/08/12/mounting_servers.html" rel="alternate" type="text/html" title="Mounting a Local Server" /><published>2020-08-12T00:00:00-04:00</published><updated>2020-08-12T00:00:00-04:00</updated><id>http://localhost:4000/2020/08/12/mounting_servers</id><content type="html" xml:base="http://localhost:4000/2020/08/12/mounting_servers.html">&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# ~/.bash_aliases&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;mount_brainiac&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; cifs //brainiac.local/&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; /media/Brainiac/&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nicolas.s.shu,domain&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WORKGROUP,sec&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ntlm,vers&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1.0
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;umount_brainiac&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;umount /media/Brainiac/&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Your Name</name><email>nicolas.s.shu[at]gmail[dot]com</email></author><category term="Instructions" /><category term="Server" /><summary type="html"># ~/.bash_aliases function mount_brainiac(){ sudo mount -t cifs //brainiac.local/$1 /media/Brainiac/$1 -o user=nicolas.s.shu,domain=WORKGROUP,sec=ntlm,vers=1.0 } function umount_brainiac(){ sudo umount /media/Brainiac/$1 }</summary></entry></feed>